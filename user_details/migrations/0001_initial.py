# Generated by Django 4.2.4 on 2024-08-23 12:57

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='UserOtp',
            fields=[
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('otp_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('u_phone', models.CharField(blank=True, max_length=45, null=True)),
                ('u_email', models.CharField(blank=True, max_length=100, null=True)),
                ('otp', models.CharField(max_length=7, null=True)),
                ('expire_time', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'user_otp',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserToken',
            fields=[
                ('token_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.BigIntegerField(null=True)),
                ('user_type', models.IntegerField(null=True)),
                ('token', models.CharField(max_length=255)),
                ('updated_on', models.DateTimeField(null=True)),
                ('expiry_time', models.DateTimeField(null=True)),
                ('allow_flag', models.IntegerField(default=1, null=True)),
            ],
            options={
                'db_table': 'user_token',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('user_type_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='UserTypeId')),
                ('user_type_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='UserTypeName')),
                ('user_control', models.JSONField(blank=True, null=True, verbose_name='UserControlLogic')),
            ],
            options={
                'db_table': 'user_type',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must start with 6, 7, 8, or 9 and be exactly equal to 10 digits ', regex='^[6789]\\d{9}$')], verbose_name='Phone Number')),
                ('email', models.CharField(max_length=254, validators=[django.core.validators.RegexValidator(message='Enter a valid email address.', regex='^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$')], verbose_name='Email Address')),
                ('user_type', models.ForeignKey(help_text='User Type Id', on_delete=django.db.models.deletion.CASCADE, to='user_details.usertype')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
